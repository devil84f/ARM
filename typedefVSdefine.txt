嵌入式开发中 typedef 与 #define 完全指南
========================================

一、核心区别
-----------
| 特性         | typedef                          | #define                        |
|--------------|----------------------------------|--------------------------------|
| 本质         | 创建新类型名                     | 预处理器文本替换               |
| 类型检查     | ✔️ 编译器严格检查                | ❌ 无类型概念                  |
| 作用域       | 遵循C语言作用域规则              | 从定义处到文件尾(或#undef)     |
| 调试可见性   | ✔️ 显示自定义类型名               | ❌ 替换后消失                  |
| 典型用途     | 寄存器/结构体/函数指针类型定义   | 地址常量/位操作/条件编译       |

二、typedef 深度解析
------------------
1. 基本语法：
   typedef 原类型 新类型名;

2. 嵌入式经典用法：
   - 硬件寄存器类型定义
     typedef volatile uint32_t reg32_t;
   
   - 精确位宽整数类型
     typedef unsigned char uint8_t;

   - 简化外设结构体
     typedef struct {
       reg32_t CR;
       reg32_t SR;
     } USART_TypeDef;

3. 优势：
   - 类型安全，编译器严格检查
   - 调试时可显示有意义类型名
   - 支持作用域控制(块/文件级)

三、#define 深度解析
-----------------
1. 基本语法：
   #define 别名 原内容

2. 嵌入式经典用法：
   - 硬件地址定义
     #define GPIOA_BASE 0x40010800
   
   - 位操作宏
     #define SET_BIT(reg, n) ((reg) |= (1<<(n)))
   
   - 功能配置开关
     #define USE_DMA 1

3. 优势：
   - 无类型限制，灵活替换
   - 预处理阶段完成，零运行时开销
   - 支持条件编译跨平台适配

四、联合使用最佳实践
-------------------
1. 硬件寄存器标准定义模式：
   typedef volatile uint32_t vuint32_t;
   #define RCC_BASE    0x40021000
   #define RCC_AHBENR  (*(vuint32_t *)(RCC_BASE + 0x14))

2. 外设抽象层示例：
   typedef struct {
     vuint32_t CRL;
     vuint32_t ODR;
   } GPIO_TypeDef;
   
   #define GPIOA ((GPIO_TypeDef *)GPIOA_BASE)

五、关键注意事项
---------------
1. #define 宏的副作用防护：
   错误示例：#define SQUARE(x) x*x
   正确写法：#define SQUARE(x) ((x)*(x))

2. typedef 指针类型陷阱：
   typedef int* int_ptr;
   int_ptr a, b;  // b实际是int*而非int

3. 硬件相关规范：
   - 所有寄存器必须加volatile
   - 地址常量必须强制类型转换
   - 位操作宏要加完备括号

六、应用场景速查表
-----------------
| 场景                | 推荐方案          | 示例                          |
|---------------------|-------------------|-------------------------------|
| 寄存器类型定义       | typedef          | typedef volatile uint32_t reg;|
| 内存映射地址         | #define          | #define UART1 0x40011000      |
| 外设结构体           | typedef          | typedef struct{...} SPI_Type;|
| 位操作宏             | #define          | #define BIT(n) (1<<(n))       |
| 平台特性开关         | #define          | #define USE_FPU 1             |

七、调试技巧
----------
1. 查看类型展开：
   - typedef类型：调试器显示自定义类型名
   - #define宏：编译时用-E选项查看预处理结果

2. 反汇编验证：
   - volatile变量应生成LDR/STR指令
   - 宏替换应产生预期汇编代码
